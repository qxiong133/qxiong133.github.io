<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Topic 1 on 记录代码,记录生活,记录自己</title>
    <link>http://qxiong133.github.io/topics/topic-1/</link>
    <description>Recent content in Topic 1 on 记录代码,记录生活,记录自己</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-EN</language>
    <managingEditor>qxiong133@163.com (codejoyer)</managingEditor>
    <webMaster>qxiong133@163.com (codejoyer)</webMaster>
    <copyright>版权(c) 2016 xcodejoyer.</copyright>
    <lastBuildDate>Fri, 04 Mar 2016 10:32:46 +0000</lastBuildDate>
    <atom:link href="http://qxiong133.github.io/topics/topic-1/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>tsp</title>
      <link>http://qxiong133.github.io/research/tsp/</link>
      <pubDate>Fri, 04 Mar 2016 10:32:46 +0000</pubDate>
      <author>qxiong133@163.com (codejoyer)</author>
      <guid>http://qxiong133.github.io/research/tsp/</guid>
      <description>

&lt;h2 id=&#34;tsp-problem:ebe5be44c2c036762f3f67360b0559ee&#34;&gt;TSP PROBLEM&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://developers.google.com/optimization/routing/tsp&#34;&gt;Traveling Salesman Problem&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/dmishin/tsp-solver&#34;&gt;python tsp 源码&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.csdn.net/elite_2007/article/details/2253745&#34;&gt;旅行商问题的n种解法&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>ideas</title>
      <link>http://qxiong133.github.io/ideas/</link>
      <pubDate>Thu, 18 Feb 2016 07:49:08 +0000</pubDate>
      <author>qxiong133@163.com (codejoyer)</author>
      <guid>http://qxiong133.github.io/ideas/</guid>
      <description>

&lt;h2 id=&#34;个人想法:85616c9715bbdc812e16deb4b0c5527c&#34;&gt;个人想法&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;编程大赛&lt;/li&gt;
&lt;li&gt;写书&lt;/li&gt;
&lt;li&gt;演讲&lt;/li&gt;
&lt;li&gt;一个提供服务的网站&lt;/li&gt;
&lt;li&gt;培训机构兼职&lt;/li&gt;
&lt;li&gt;刷题提升目前工作&lt;/li&gt;
&lt;li&gt;elance/freelance&lt;/li&gt;
&lt;li&gt;一个开源项目 + 视频教学&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;算法之路:85616c9715bbdc812e16deb4b0c5527c&#34;&gt;算法之路&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.zhihu.com/question/35485418&#34;&gt;leetcode 中有哪些题的解法让你拍案叫绝&lt;/a&gt; provider right answer&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.zhihu.com/question/26243279&#34;&gt;刷leetcode对去北美找工作面试真的帮助很大吗？对面试国内的公司比如bat有没有帮助？&lt;/a&gt; how to prepare interview&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;leetcode蛮有用的，我当时刷了80%，感觉对所有面试题都能短时间给一个大概的答案。没在国内找过工作，所以不好说。
大家干这行的，如果想换工作，都会去刷题，因为面试能力和你平时的工作能力其实差别挺大的。你表示自己能熟悉各种machine learning，随意实现dbn，rbm，q-learning蒙特卡罗，可一段时间不刷题，一下碰上写个thread-safe circular linked-list还真一下反应不过来。
我觉得题主提问是求面经，而且是问我们寻常人该怎么准备面试，也不是来看几位大牛吹水的。我就分享下自己找工作时候的一些准备过程。&lt;/p&gt;

&lt;p&gt;认真看了一本算法书，整理了一下自己的算法体系，像算法导论，或者Algorithm Design by Jon Kleinberg 也挺不错的。花一周认真看看，如果你连几个search，tree都不熟的话还是多花点时间。。好处是你给自己建立了一个自洽的算法脉络，以后看面试题，或者处理其他一些现实问题，你都会不由自主的去把问题抽象化，然后归类，我自觉这种思考方式使我受益良多。&lt;/p&gt;

&lt;p&gt;看一下Cracking the code interview.这本书大家应该都说烂了，但这本书长盛不衰必然也是有理由的。它的题量不多，书里废话也挺多。但它的好处是，它做了一个整理面试题然后归类的过程，而且基本把你可能遇到的所有面试题类型都覆盖了。&lt;/p&gt;

&lt;p&gt;然后开始刷leetcode吧，从简到难，认真刷一遍。建议不要用任何ide，打开没有error check的text editor（emacs，vim， notepad++ etc)&lt;/p&gt;

&lt;p&gt;最好在有几个可以吹水的领域。因为面试不是一个单纯做题的过程，对于我们平凡人而言，既然不能一直秒杀面试官，那就想得正常点，和面试官交个朋友。而做技术的，大多数都乐意结交那些知道一些自己所不懂领域的人。我记得我面的时候，还给人划过Android整个system stack，从dalvik画到kernel，还有人跟我聊在microkernel system design之类的。&lt;/p&gt;

&lt;p&gt;保持一个积极的心态。我知道知乎有很些大神谈面经就是“我从来没被拒过“，但你要相信，这世界上还是平凡人居多的。我的朋友，包括我自己，在面试中都是一个越挫越勇的过程。像我一个朋友，他被google，twitter，apple，microsoft都拒过，但最后去了Facebook，还有一个朋友被google，square拒过，最后拒了amazon去了一家startup，现在已经被某大公司收购，走上高富帅之路。我被facebook，amazon拒过，google intern拒过一次，但microsoft就走的很顺，后来google很奇葩的把我面试时间schedule错了，我过了第一轮，签了MS就不再面了。所以无论遇到什么困难，都要保持乐观，你不是一个人，平凡人也有很多，要相信自己&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;the rest link &lt;a href=&#34;https://www.zhihu.com/question/34615079&#34;&gt;Leetcode刷完了第一次，用了一个半月，完全人肉debug，接受率不到20%，第二次该如何刷？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;associate book&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://book.douban.com/subject/1433399/&#34;&gt;Introduction to Algorithms&lt;/a&gt; todo&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://book.douban.com/subject/1475870/&#34;&gt;Algorithm Design&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://book.douban.com/subject/10436668/&#34;&gt;Cracking the Coding Interview&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://book.douban.com/subject/6872527/&#34;&gt;Cracking the Coding Interview: 150 Programming Questions and Solutions(5th edition)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Learn Python the Hard way&lt;/li&gt;
&lt;li&gt;秋叶拓哉-挑战程序设计竞赛, 刘汝佳翻译的-挑战编程：程序设计竞赛训练手册&lt;/li&gt;
&lt;li&gt;刘汝佳 算法竞赛入门经典&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
  </channel>
</rss>